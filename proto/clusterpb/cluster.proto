syntax = "proto3";

option go_package = "./clusterpb";

package clusterpb;

service ClusterNode {
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  rpc RunCommand(CommandRequest) returns (CommandResponse);
  rpc StreamCommand(stream CommandRequest) returns (stream CommandResponse);
}

message Node {
  string node_id = 1;
  string node_addr = 2;
  bool alive = 3;
  int64 last_seen = 4;
}

message HeartbeatRequest {
  Node self = 1;
  repeated Node peers = 2;
}

message HeartbeatResponse {
  repeated Node peers = 1;
}

message KeyValue {
  string key = 1;
  bytes value = 2;
}

message KeyValueList {
  repeated KeyValue list = 1;
}

message KeyValueMap {
  map<string, KeyValueList> map = 1;
}

message CommandRequest {
  string command = 1;
  string key = 2;
  repeated bytes args = 3;
}

message CommandResponse {
  string error = 1;
  oneof response {
    bytes value = 2;        // For single value responses (e.g., `HGET hash field`)
    bool success = 3;       // For simple ack responses (e.g. `HSET`)
    int64 count = 4;        // For counts (e.g. `HDEL`)
    KeyValueList list = 5;  // For key/value lists (e.g., `HGET hash` or `HGET hash field1 field2` )
    KeyValueMap map = 6;    // For key/value maps
  }
}
