syntax = "proto3";

option go_package = "./clusterpb";

package clusterpb;

service ClusterNode {
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  // Unary RPCs
  rpc Get(GetRequest) returns (GetResponse);
  rpc Set(SetRequest) returns (SetResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  // Streaming RPCs for pipelining
  rpc StreamGet(stream GetRequest) returns (stream GetResponse);
  rpc StreamSet(stream SetRequest) returns (stream SetResponse);
  rpc StreamDelete(stream DeleteRequest) returns (stream DeleteResponse);
}

message Node {
  string node_id = 1;
  string node_addr = 2;
  bool alive = 3;
  int64 last_seen = 4;
}

message HeartbeatRequest {
  Node self = 1;
  repeated Node peers = 2;
}

message HeartbeatResponse {
  repeated Node peers = 1;
}

message GetRequest {
  string hash = 1;
  string key = 2;
}

message GetResponse {
  bytes data = 1;
}

message SetRequest {
  string hash = 1;
  string key = 2;
  bytes data = 3;
  int64 ttl = 4;
}

message SetResponse {
  bool success = 1;
}

message DeleteRequest {
  string hash = 1;
  string key = 2;
}

message DeleteResponse {
  bool success = 1;
}
